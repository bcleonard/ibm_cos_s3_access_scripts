# Simple configuration for an HTTPs proxy listening on port 443 on all
# interfaces and forwarding requests to multiple backend "servers"
global
   maxconn 4096
   log stdout format raw daemon
   external-check

defaults
   log global
   mode http
   timeout client 30s
   timeout server 30s
   timeout connect 10s

# provides a statistics page running on port 1936 which updates every 5s
listen stats 
    bind :1936
    mode http
    stats enable
    stats hide-version
    stats realm Haproxy\ Statistics
    stats uri /
    stats refresh 5s

# http only traffic - This example will send allow you proxy hosts that start with icoslbcm & icoslbvm from the same server.
frontend fe_icos_http
   bind  *:80
   acl ACL_icos_vault_mode hdr_beg(host) -i icoslbvm
   acl ACL_icos_container_mode hdr_beg(host) -i icoslbcm
   use_backend be_icos_vault_http if ACL_icos_vault_mode
   use_backend be_icos_container_http if ACL_icos_container_mode

# does a passthrough of ssl.  Will not decrypt traffic.  This example will send allow you proxy hosts that start with icoslbcm & 
# icoslbvm from the same server.  You will need to change the domain name below.
frontend fe_icos_https
   mode tcp
   option tcplog
   bind  *:443

   acl ACL_icos_vault_mode req_ssl_sni -i icoslbvm.<your fq domain name>
   acl ACL_icos_container_mode req_ssl_sni -i icoslbcm.<your fq domain name>
   use_backend be_icos_vault_https if ACL_icos_vault_mode
   use_backend be_icos_container_https if ACL_icos_container_mode

# vault mode accessers http
backend be_icos_vault_http
   balance roundrobin
   option external-check
   external-check command /usr/local/bin/accesser_check.sh
   server <accesser in vault access pool name> <ip address>:80 check inter 5s fall 6 rise 3
   server <accesser in vault access pool name> <ip address>:80 check inter 5s fall 6 rise 3

# container mode accessers http
backend be_icos_container_http
   balance roundrobin
   option external-check
   external-check command /usr/local/bin/accesser_check.sh
   server <accesser in container access pool name> <ip address>:80 check inter 5s fall 6 rise 3
   server <accesser in container access pool name> <ip address>:80 check inter 5s fall 6 rise 3

# vault mode accessers https
backend be_icos_vault_https
   mode tcp
   balance roundrobin
   option external-check
   external-check command /usr/local/bin/accesser_check.sh
   server <accesser in vault access pool name> <ip address>:443 check inter 5s fall 6 rise 3
   server <accesser in vault access pool name> <ip address>:443 check inter 5s fall 6 rise 3

# container mode accessers https
backend be_icos_container_https
   mode tcp
   balance roundrobin
   option external-check
   external-check command /usr/local/bin/accesser_check.sh
   server <accesser in container access pool name> <ip address>:443 check inter 5s fall 6 rise 3
   server <accesser in container access pool name> <ip address>:443 check inter 5s fall 6 rise 3

